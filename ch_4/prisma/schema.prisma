generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
}

model User {
  id          Int     @id@default(autoincrement())
  name        String
  email       String  @unique
  password    String  
  bank_accounts BankAccount[]   // one to many
  profile     Profile?  // one to one
  resetToken  String?   // token reset password
  expired_at  DateTime?  // waktu kedaluwarsa token reset

  @@map("users")
}

model BankAccount {
  id                    Int             @id@default(autoincrement())
  user                  User            @relation(fields: [user_id], references: [id], onDelete: Cascade)
  user_id               Int
  bank_name             String  
  bank_account_number   String          @unique
  balance               Float
  transaction_sent      Transaction[]   @relation("sender")
  transaction_received  Transaction[]   @relation("receiver")

  @@map("bank_accounts")
}

model Profile { 
  id                Int   @id@default(autoincrement())
  user_id           Int   @unique
  user              User  @relation(fields: [user_id], references: [id])
  identity_type     String
  identity_number   String
  address           String

  @@map("profiles")
}

model Transaction {
  id                        Int     @id@default(autoincrement())
  source_account            BankAccount   @relation("sender", fields: [source_account_id], references: [id])
  source_account_id         Int
  destination_account       BankAccount   @relation("receiver", fields: [destination_account_id], references: [id])
  destination_account_id    Int
  amount                    Float

  @@map("transactions")
}

model Image {
  id            Int     @id@default(autoincrement())
  title         String
  description   String
  image_url     String

  @@map("images")
}